#!/usr/bin/env ruby
begin
  require 'optparse'
  require 'chart'
  require 'json'

  options = {
    :defaults   => [nil, nil, nil, nil],
    :input_type => 'nxyz',
    :recvr_type => :line,
    :sendr_type => :echo,
    :null_str   => nil,
  }
  OptionParser.new do |opts|
    opts.banner = %{
usage: chart [options] FILES...

  Create d3 charts from data files.

options:

}.lstrip

    opts.on("-h", "--help", "print this help") do
      puts opts
      puts
      puts Chart.version
      exit
    end

    opts.on("-i", "--input-type TYPE", "sets input type") do |value|
      options[:input_type] = value
    end

    opts.on("-N", "--null-str STR", "sets the null str ") do |value|
      options[:null_str] = value
    end

    opts.on("-n", "--default-name NAME", "sets default name") do |value|
      options[:defaults][0] = value
    end

    opts.on("-x", "--default-x VALUE", "sets default x value") do |value|
      options[:defaults][1] = value
    end

    opts.on("-y", "--default-y VALUE", "sets default y value") do |value|
      options[:defaults][2] = value
    end

    opts.on("-z", "--default-z VALUE", "sets default z value") do |value|
      options[:defaults][3] = value
    end
  end.parse!

  defaults   = options[:defaults]
  input_type = options[:input_type]
  recvr_type = options[:recvr_type]
  sendr_type = options[:sendr_type]
  null_str   = options[:null_str]

  parser = Chart::Parsers.create(input_type)
  recvr  = Chart::Receivers.create(recvr_type)
  sendr  = Chart::Senders.create(sendr_type)

  while line = ARGF.gets
    line.chomp!("\n")
    nxyz = parser.call(line, defaults, null_str)
    data = recvr.call(nxyz)
    sendr.call(data) if data
  end

  data = recvr.call(nil)
  sendr.call(data) if data

rescue Interrupt
  exit 130
rescue Errno::EPIPE
  exit 0
end
