#!/usr/bin/env ruby
begin
  require 'optparse'
  require 'chart/server'

  options = Chart.options(
    :port     => 4567,
    :bind     => "0.0.0.0",
    :reload_templates => false,
  )
  OptionParser.new do |opts|
    opts.banner = %{
usage: chart-server [options]

  Start the chart server.

options:
}.lstrip

    opts.on("-b", "--binding IP", "bind to the specified IP (#{options[:bind]})") do |value|
      options[:bind] = value
    end

    opts.on("-e", "--environment ENV", "environment (#{options[:environment]})") do |value|
      options[:environment] = value
    end

    opts.on("-h", "--help", "print this help") do
      puts opts
      puts
      puts Chart.version
      exit
    end

    opts.on("--[no-]reload-templates", "reload templates between requests (#{options[:reload_templates]})") do |value|
      options[:reload_templates] = value
    end

    opts.on("-p", "--port PORT", "run on the specified port (#{options[:port]})") do |value|
      options[:port] = value
    end

    opts.on("-P", "--pidfile FILE", "write pid to this file (currently does NOT daemonize)") do |value|
      options[:pidfile] = value
    end
  end.parse!

  Chart.setup(options)

  if pidfile = options[:pidfile]
    File.open(pidfile, "w") {|io| io.puts Process.pid }
  end

  Chart::Server.set(options)
  Chart::Server.run!

rescue Interrupt
  exit 130
rescue Errno::EPIPE
  exit 0
end
