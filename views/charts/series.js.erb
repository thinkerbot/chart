Chart.render = function (config, rows) {
  var margin = {top: 20, right: 80, bottom: 30, left: 50},
      width = 960 - margin.left - margin.right,
      height = 500 - margin.top - margin.bottom;

  var x = d3.scale.linear()
      .range([0, width]);

  var y = d3.scale.linear()
      .range([height, 0]);

  var color = d3.scale.category10();

  var xAxis = d3.svg.axis()
      .scale(x)
      .orient("bottom");

  var yAxis = d3.svg.axis()
      .scale(y)
      .orient("left");

  var line = d3.svg.line()
      .interpolate("basis")
      .x(function(d) { return x(d.x); })
      .y(function(d) { return y(d.y); });

  var svg = d3.select("body").append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

  // Data
  x.domain(d3.extent(rows, function(d) { return d.x; }));
  y.domain(d3.extent(rows, function(d) { return d.y; }));

  var data = d3.nest()
      .key(Chart.topic.format)
      .entries(rows);

  // Config
  var topics = d3.keys(config.topics);
  color.domain(topics);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);
  
  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Y");

  var series = svg.selectAll(".series")
      .data(data)
      .enter().append("g")
      .attr("class", "series");

  series.append("path")
      .attr("class", "line")
      .attr("d", function(d) { return line(d.values); })
      .style("stroke", function(d) { return color(Chart.topic.parse(d.key)); });

  series.append("text")
      .datum(function(d) {
        var last_value = d.values[d.values.length - 1];
        return {key: d.key, x: last_value.x, y: last_value.y};
      })
      .attr("transform", function(d) {
        return "translate(" + x(d.x) + "," + y(d.y) + ")";
      })
      .attr("x", 3)
      .attr("dy", ".35em")
      .text(function(d) { return d.key; });
};
