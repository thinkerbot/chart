Chart.render = function () {
  var margin = {top: 20, right: 80, bottom: 30, left: 50},
      width = 960 - margin.left - margin.right,
      height = 500 - margin.top - margin.bottom;

  var x = d3.scale.linear()
      .range([0, width]);

  var y = d3.scale.linear()
      .range([height, 0]);

  var color = d3.scale.category10();

  var xAxis = d3.svg.axis()
      .scale(x)
      .orient("bottom");

  var yAxis = d3.svg.axis()
      .scale(y)
      .orient("left");

  var line = d3.svg.line()
      .interpolate("basis")
      .x(function(row) { return x(row.x); })
      .y(function(row) { return y(row.y); });

  var svg = d3.select("body").select("#svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

  // Data
  var config = Chart.config;
  var rows = Chart.rows;
  var data = Chart.data;

  x.domain(d3.extent(rows, function(row) { return row.x; }));
  y.domain(d3.extent(rows, function(row) { return row.y; }));

  // Config
  var topics = d3.keys(config.topics);
  color.domain(topics);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);
  
  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Y");

  var series = svg.selectAll(".series").data(data, function (d) { return d.key; });

  var group = series.enter()
    .append("g")
    .attr("class", "series");

  group.append("path")
        .attr("class", "line")
        series.attr("d", function(d) { console.log("here");return line(d.values); })
        .style("stroke", function(d) { return color(d.values[0].topic); });
            
  series.exit().remove();
};
